name: Build Blog

on:
  push:
    branches: [ main ]
    paths:
      - 'posts/**'
      - 'images/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'posts/**'
      - 'images/**'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install markdown pyyaml pillow
    
    - name: Validate frontmatter
      run: |
        python .github/scripts/validate_posts.py
    
    - name: Check image sizes
      run: |
        python .github/scripts/check_images.py
    
    - name: Validate authors
      run: |
        python .github/scripts/validate_authors.py

  build:
    needs: validate
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install markdown
    
    - name: Build blog posts
      run: python convert_posts.py
    
    - name: Create preview comment
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v5
      with:
        script: |
          const fs = require('fs');
          const changedFiles = await github.rest.pulls.listFiles({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          const newPosts = changedFiles.data
            .filter(file => file.filename.startsWith('posts/') && file.filename.endsWith('.md'))
            .map(file => file.filename.replace('posts/', '').replace('.md', '.html'));
          
          if (newPosts.length > 0) {
            const body = `### ðŸš€ Post Preview Links\n\n` +
              newPosts.map(post => `- [${post}](https://msingi-ai.github.io/posts/html/${post})`).join('\n');
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
          }
    
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add -A
        git diff --quiet && git diff --staged --quiet || (git commit -m "Auto-generate blog HTML files" && git push)
